<?php
/*
 * All Code Confidential and Proprietary, Copyright Â©2011 Kaltura, Inc.
 * To learn more: http://corp.kaltura.com/Products/Video-Applications/Kaltura-Mediaspace-Video-Portal
 */
// add css
echo $this->headStyle($this->partial('partials/screencapture.css', 'screencapture'));


//define constants
$partnerId = Kms_Resource_Config::getConfiguration('client', 'partnerId');
$uiconfId = Kms_Resource_Config::getModuleConfig('screencapture', 'ksrId'); // integer
// prepare KS
$ks = Kms_Resource_Client::getUserClient()->getKs();

$_script = Kms_Resource_Config::getConfiguration('client', 'serviceUrl').'/p/' . $partnerId . '/sp/' . $partnerId . '/ksr/uiconfId/' . $uiconfId;
$this->headScript()->appendFile($_script);
?>
<div id="uploadContainer">   
    <h3 class="uploadBoxHeading"><?php echo $this->translate('Screen Capture'); ?></h3>
    <div id="uploadbox<?php echo $this->uploadBoxId ?>" class="uploadbox">
	<div class="ksrBox">
	    <h4>To create a screen recording follow these steps:</h4>
	    <ul>
		<li>Launch the Screen Recorder.<strong> Note that it might take 1-2 minutes to load the applet</strong></li>
		<li>Select the options, area to capture and click the Record button</li>
		<li>Once you complete the recording, review the result and click the Upload button</li>
		<li>After the upload is complete you will be able to enter the metadata for the entry and save it</li>
	    </ul>
        <div id="ksrError"></div>
	    <div class="entry_status">
            <div class="progressbar"><span style="position: absolute"></span></div>
            <a class="uploadbutton uploadDocButton">
		    <span class="text" onclick="startScreenRecorder();">+&nbsp;<?php echo $this->translate('Launch the screen recorder'); ?></span>
		</a>
	    </div>
            <div class="entry_details" id="entry_details" style="display:none">
                <?php 
                $form = '';
                // error box
                if(isset($this->saveError) && true === $this->saveError)
                {
                    $form .= '<div class="errorbox">'.$this->translate('Oops, something went wrong. The information was not saved.').'</div>';
                }
                elseif(isset($this->formValid) && false === $this->formValid)
                {
                    $form .= '<div class="errorbox">'.$this->translate('Please fill out all required fields').'</div>';
                }
                // form header
                $form .= '<h4>'.$this->translate('Please fill out these details').':</h4>';

                // the form itself
                $form .= $this->form->render();
                echo $form; 
                
                ?>
            </div>
	</div>
    </div>
</div>
<script type="text/javascript">
    
    enableKeepAlive(5);
    var buttonDisabled = false
    function startScreenRecorder() {
        if(!buttonDisabled) {
        	buttonDisabled = true;
            $('#uploadbox1 .uploadbutton').addClass('disabled');
            kalturaScreenRecord.startKsr('<?php echo $partnerId; ?>', '<?php echo $ks; ?>', true);
        }
        
    }
    
    var ksuHandlers = new Array();
    var ksrHandlerPrototype = function() {
        this.reEnableForm = function() {
            /* set formSaved to false */
            this.formSaved = false;
            /* change the action back */
            //  $("#uploadbox"+this.id+" #edit_entry").attr('action', baseUrl + '/entry/add-entry-form/id/'+this.id);
            /* change button name to Save */
            $("#uploadbox1 .save_edit_entry").html(translate('Save'));
            /* re-enable the button */
            $("#uploadbox1 .save_edit_entry").removeAttr('disabled');
          
        }
    }

    ksuHandlers[1] = new ksrHandlerPrototype();
    //override callback function
    kalturaScreenRecord.logCaptureCallBack = function(phase, arg1, arg2)
    {

        // insert code "on ready"
        jsLog("Kaltura KSR captureCallBack: " + phase + " args: [" + arg1 + ", " + arg2 + "]");
        if(phase == 'showing') {
            $('#uploadbox1 .progressbar').hide();
           
        }
    }
    kalturaScreenRecord.onExitCallBack = function() {
    		buttonDisabled = false;
        	$('#uploadbox1 .uploadbutton').removeClass('disabled');
        }
    
    kalturaScreenRecord.setDetectResultErrorMessageElementId('ksrError');
    
    
    // callback function that will be called by library before loading the widget
    // this function removes description and tags from UI and assigns default values
    function removeDescAndTags(objOptions)
    {
//	jsLog("object before change");
	//jsLog(objOptions);
    objOptions['kaltura.videoBitRate'] = <?php echo Kms_Resource_Config::getModuleConfig('screencapture','videoBitrate') ? Kms_Resource_Config::getModuleConfig('screencapture','videoBitrate') : '2000';?>;
	objOptions['kaltura.submit.description.enabled'] = false; //disable description field
	objOptions['kaltura.submit.description.value'] = ''; //assign default description
	objOptions['kaltura.submit.tags.enabled'] = false; //disable tags field
	objOptions['kaltura.submit.tags.value'] = ''; //assign default tags
//	jsLog("object after change");
	
	return objOptions;
    }

    /**
    * override default download callback - writes to console
    */
    kalturaScreenRecord.downloadCallBack = function(percent)
    {
        if($("#uploadbox1 .progressbar").not(':visible')){
            $("#uploadbox1 .progressbar").show();
            $('#uploadbox1 .progressbar').progressbar();
        }
            
        
        jsLog('Downloading new version... ('+ percent +'%)');
        $("#uploadbox1 .progressbar").progressbar('value', parseInt(percent));
        $("#uploadbox1 .progressbar > .ui-progressbar-value > span").text('Loading '+percent+'%');
    }

    // setting callback to override some kaltura options
    kalturaScreenRecord.setModifyKalturaOptionsCallback(removeDescAndTags);
	
    kalturaScreenRecord.startCallBack = function(result)
    {
    }
	
    kalturaScreenRecord.UploadCompleteCallBack = function(entryId)
    {
	//alert("Kaltura KSR uploadCompleteCallBack: created entry with ID ["+entryId+"]");
        if(entryId) {
            $('input#Entry-id').val(entryId);
            $('#uploadbox<?php echo $this->uploadBoxId ?> .entry_details').show();
            $('#uploadbox<?php echo $this->uploadBoxId ?> .entry_status .uploadbutton').remove();
            $("#uploadbox1 .progressbar").progressbar();
            $("#uploadbox1 .progressbar").addClass('complete');
            $("#uploadbox1 .progressbar").progressbar('value', 100);
            
        }
    }
    
    
    // override generic detection callback, and then call the original callback
    kalturaScreenRecord.setDetectResultErrorCustomCallback(ksrCustomCallback);
       
    function ksrCustomCallback(funcName){
       buttonDisabled = true;
       $('#uploadbox1 .uploadbutton').addClass('disabled');
       kalturaScreenRecord.setDetectResultErrorCustomCallback(null);
       kalturaScreenRecord.detectCallback(funcName);
   }
   
    
</script>